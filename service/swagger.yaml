swagger: '2.0'
info:
  version: 1.0.0
  title: API
  description: My Application API
host: localhost:3000
basePath: /
tags:
  - name: User
    description: API for users in the system
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /register:
    post:
      tags:
        - User
      summary: Register
      responses:
        '200':
          description: OK
      parameters:
        - in: body
          name: body
          description: Object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/UserLogin'
  /login:
    post:
      tags:
        - User
      summary: Get JWT Token
      responses:
        '200':
          description: OK
      parameters:
        - in: body
          name: body
          description: Object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/UserLogin'
  /re-login:
    post:
      tags:
        - User
      summary: Get Info User
      responses:
        '200':
          description: OK
      security:
        - Bearer: []
  /books:
    get:
      tags:
        - Book
      summary: Get All Book
      responses:
        '200':
          description: OK
      parameters:
        - name: limit
          in: query
          description: Limit
          type: number
        - name: page
          in: query
          description: page
          type: number
    post:
      tags:
        - Book
      summary: Create A Book
      responses:
        '200':
          description: OK
      parameters:
        - in: body
          name: body
          description: Object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/BookCreate'
      security:
        - Bearer: []
    put:
      tags:
        - Book
      summary: Update A Book
      responses:
        '200':
          description: OK
      parameters:
        - in: body
          name: body
          description: Object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/BookUpdate'
      security:
        - Bearer: []
  /books/{id}:
    get:
      tags:
        - Book
      summary: Get A Book
      responses:
        '200':
          description: OK
      parameters:
        - name: id
          in: path
          required: true
          description: Book ID
          type: string
    delete:
      tags:
        - Book
      summary: Delete A Book
      responses:
        '200':
          description: OK
      parameters:
        - name: id
          in: path
          required: true
          description: Book ID
          type: string
      security:
        - Bearer: []
  /cart:
    post:
      tags:
        - Cart
      summary: To Cart
      responses:
        '200':
          description: OK
      parameters:
        - name: List Cart Item
          in: body
          required: true
          description: Book ID
          schema:
            $ref: '#/definitions/ListCart'
  /category:
    get:
      tags:
        - Category
      summary: Get All Category
      responses:
        '200':
          description: OK
    post:
      tags:
        - Category
      summary: Create A Category
      responses:
        '200':
          description: OK
      parameters:
        - in: body
          name: body
          description: Object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/CategoryCreate'
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      _id:
        type: string
      email:
        type: string
      password:
        type: string
  UserLogin:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  BookCreate:
    type: object
    properties:
      title:
        type: string
      image:
        type: string
      category:
        type: string
        enum:
          - drama
          - comedy
          - sport
      quantity:
        type: number
      price:
        type: string
      description:
        type: string
  BookUpdate:
    type: object
    properties:
      _id:
        type: string
      title:
        type: string
      image:
        type: string
      category:
        type: string
        enum:
          - drama
          - comedy
          - sport
      quantity:
        type: number
      price:
        type: string
      description:
        type: string
  CartItem:
    type: object
    properties:
      _id:
        type: string
      count:
        type: number
  ListCart:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/CartItem'
  CategoryCreate:
    type: object
    properties:
      name:
        type: string
      description:
        type: string

